---
  - name: Provision on EC2
    hosts: localhost
 
    vars:
      instance_type: "t2.micro"
      security_group: "rafanch_sec_group"
      image: "ami-8cff51fb"
      keypair: "rafsanch"
      region: "eu-west-1"
      subnet: "subnet-459a9231"
      tag_name: "ansible_engine_test"
      ec2_count: 1
      tower_hostname: "ec2-54-171-242-141.eu-west-1.compute.amazonaws.com"
      tower_api_token: "0F7V6ku5xCcTEJ2nWa3y1yXNeCvhZR"
      host_config_key: "9724412a-8b3e-4621-abf4-c0f9c3d118ef"
      callback_job: 9
 
    tasks:
 
      - name: Create a security group
        ec2_group:
          name: "{{ security_group }}"
          description: Security Group for ansible_engine_test Servers
          region: "{{ region }}"
          aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
          aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 443
              to_port: 443
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
 
      - name: Launch the EC2 Instances
        ec2:
          aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
          aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
          group: "{{ security_group }}"
          instance_type: "{{ instance_type}}"
          image: "{{ image }}"
          assign_public_ip: yes
          vpc_subnet_id: "{{ subnet }}"
          wait: true
          region: "{{ region }}"
          keypair: "{{ keypair }}"
          count: "{{ ec2_count }}"
        register: ec2
 
      - name: Show public ip
        debug:
          msg: "{{ item.public_ip }}"
        with_items: "{{ ec2.instances }}"
 
      # - name: Add the EC2 instance to the inventory
      #   lineinfile:
      #     dest: "./inventory"
      #     regexp: "{{ item.public_ip }}"
      #     insertafter: "[ansible_engine_test]"
      #     line: "{{ item.public_ip }}"
      #   with_items: "{{ ec2.instances }}"
  
      - name: Wait for SSH daemon to start
        wait_for:
          host: "{{ item.public_ip }}"
          port: 22
          state: started
        with_items: "{{ ec2.instances }}"
 
      - name: Tag instance
        ec2_tag:
          aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
          aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
          resource: "{{ item.id }}"
          region: "{{ region }}"
          state: present
          tags:
            Name: "{{ tag_name }}"
        with_items: "{{ ec2.instances }}"
        
      - name: Add to inventory by rest api
        uri:
          url: "https://{{ tower_hostname }}/api/v2/inventories/3/hosts/"
          method: POST
          force_basic_auth: no
          body_format: json
          headers:
            Content-Type: application/json
            Authorization: Bearer {{ tower_api_token }}
          body: '{"name":"{{ item.public_ip }}"}'
          return_content: yes
          status_code: 201
          validate_certs: no
        with_items: "{{ ec2.instances }}"
      
      - name: Launch callback request to launch provision job
        uri:
          url: "https://{{ tower_hostname }}:443/api/v2/job_templates/{{ callback_job }}/callback/"
          method: POST
          force_basic_auth: no
          body_format: json
          headers:
            Content-Type: application/json
            X-Forwarded-For: "{{ item.public_ip }}"
          body: '{"host_config_key": "{{ host_config_key }}", "extra_vars": "{\"new_hostname\": \"{{ item.public_ip }}\"}"}'
          return_content: yes
          status_code: 201
          validate_certs: no
        with_items: "{{ ec2.instances }}"
